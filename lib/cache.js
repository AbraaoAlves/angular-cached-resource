// Generated by CoffeeScript 1.7.1
var LOCAL_STORAGE_PREFIX, buildKey, localStorage, memoryCache;

LOCAL_STORAGE_PREFIX = 'cachedResource://';

localStorage = window.localStorage;

memoryCache = {};

buildKey = function(key) {
  return "" + LOCAL_STORAGE_PREFIX + key;
};

module.exports = {
  getItem: function(key, fallbackValue) {
    var item;
    key = buildKey(key);
    item = memoryCache[key];
    if (item == null) {
      item = localStorage.getItem(key);
    }
    if (item != null) {
      return angular.fromJson(item);
    } else {
      return fallbackValue;
    }
  },
  setItem: function(key, value) {
    var stringValue;
    key = buildKey(key);
    stringValue = angular.toJson(value);
    try {
      localStorage.setItem(key, stringValue);
      if (memoryCache[key] != null) {
        delete memoryCache[key];
      }
    } catch (_error) {
      memoryCache[key] = stringValue;
    }
    return value;
  },
  clear: function(_arg) {
    var cacheKey, cacheKeys, exceptFor, exception, i, key, skipKey, _i, _j, _k, _len, _len1, _ref, _ref1, _results;
    _ref = _arg != null ? _arg : {}, key = _ref.key, exceptFor = _ref.exceptFor;
    if (key == null) {
      key = '';
    }
    key = buildKey(key);
    if (exceptFor == null) {
      exceptFor = [];
    }
    exceptFor = exceptFor.map(buildKey);
    cacheKeys = [];
    for (i = _i = 0, _ref1 = localStorage.length; 0 <= _ref1 ? _i < _ref1 : _i > _ref1; i = 0 <= _ref1 ? ++_i : --_i) {
      cacheKey = localStorage.key(i);
      if (cacheKey.indexOf(key) !== 0) {
        continue;
      }
      skipKey = false;
      for (_j = 0, _len = exceptFor.length; _j < _len; _j++) {
        exception = exceptFor[_j];
        if (!(cacheKey.indexOf(exception) === 0)) {
          continue;
        }
        skipKey = true;
        break;
      }
      if (skipKey) {
        continue;
      }
      cacheKeys.push(cacheKey);
    }
    _results = [];
    for (_k = 0, _len1 = cacheKeys.length; _k < _len1; _k++) {
      cacheKey = cacheKeys[_k];
      _results.push(localStorage.removeItem(cacheKey));
    }
    return _results;
  }
};
