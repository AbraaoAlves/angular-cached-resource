// Generated by CoffeeScript 1.7.1
var LOCAL_STORAGE_PREFIX, buildKey, localStorage, memoryCache;

LOCAL_STORAGE_PREFIX = 'cachedResource://';

localStorage = window.localStorage;

memoryCache = {};

buildKey = function(key) {
  return "" + LOCAL_STORAGE_PREFIX + key;
};

module.exports = {
  getItem: function(key, fallbackValue) {
    var item;
    key = buildKey(key);
    item = memoryCache[key];
    if (item == null) {
      item = localStorage.getItem(key);
    }
    if (item != null) {
      return angular.fromJson(item);
    } else {
      return fallbackValue;
    }
  },
  setItem: function(key, value) {
    var stringValue;
    key = buildKey(key);
    stringValue = angular.toJson(value);
    try {
      localStorage.setItem(key, stringValue);
      if (memoryCache[key] != null) {
        delete memoryCache[key];
      }
    } catch (_error) {
      memoryCache[key] = stringValue;
    }
    return value;
  },
  clear: function(key) {
    var cacheKey, cacheKeys, _i, _j, _len, _ref, _results, _results1;
    key = buildKey(key);
    cacheKeys = (function() {
      _results = [];
      for (var _i = 0, _ref = localStorage.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).map(function(i) {
      return localStorage.key(i);
    });
    _results1 = [];
    for (_j = 0, _len = cacheKeys.length; _j < _len; _j++) {
      cacheKey = cacheKeys[_j];
      if (cacheKey.indexOf(key) === 0) {
        _results1.push(localStorage.removeItem(cacheKey));
      }
    }
    return _results1;
  },
  clearAll: function(_arg) {
    var exceptFor, exception, i, key, keys, skipKey, _i, _j, _k, _len, _len1, _ref, _results;
    exceptFor = (_arg != null ? _arg : {}).exceptFor;
    if (exceptFor == null) {
      exceptFor = [];
    }
    exceptFor = exceptFor.map(buildKey);
    keys = [];
    for (i = _i = 0, _ref = localStorage.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      key = localStorage.key(i);
      if (key.indexOf(LOCAL_STORAGE_PREFIX) !== 0) {
        continue;
      }
      skipKey = false;
      for (_j = 0, _len = exceptFor.length; _j < _len; _j++) {
        exception = exceptFor[_j];
        if (!(key.indexOf(exception) === 0)) {
          continue;
        }
        skipKey = true;
        break;
      }
      if (skipKey) {
        continue;
      }
      keys.push(key);
    }
    _results = [];
    for (_k = 0, _len1 = keys.length; _k < _len1; _k++) {
      key = keys[_k];
      _results.push(localStorage.removeItem(key));
    }
    return _results;
  }
};
