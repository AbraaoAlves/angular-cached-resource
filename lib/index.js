// Generated by CoffeeScript 1.7.1
var app;

app = angular.module('cachedResource', ['ngResource']);

app.factory('cacheResource', [
  '$resource', '$timeout', '$q', function($resource, $timeout, $q) {
    var localStorageKey, simpleCache;
    localStorageKey = function(url, parameters) {
      var name, value;
      for (name in parameters) {
        value = parameters[name];
        url = url.replace(":" + name, value);
      }
      return url;
    };
    simpleCache = function(Resource, method, url) {
      return function(parameters) {
        var cached, deferred, item, key, resource, _i, _len;
        resource = Resource[method].apply(Resource, arguments);
        resource.$httpPromise = resource.$promise;
        if (window.localStorage == null) {
          return resource;
        }
        if (angular.isFunction(parameters)) {
          parameters = null;
        }
        key = localStorageKey(url, parameters);
        deferred = $q.defer();
        resource.$promise = deferred.promise;
        resourcePromise.then(function(response) {
          return localStorage.setItem(key, angular.toJson(response));
        });
        cached = angular.fromJson(localStorage.getItem(key));
        if (cached) {
          if (angular.isArray(cached)) {
            for (_i = 0, _len = cached.length; _i < _len; _i++) {
              item = cached[_i];
              resource.push(item);
            }
          } else {
            angular.extend(resource, cached);
          }
          $timeout(function() {
            return deferred.notify('cacheReady');
          });
        }
        return resource;
      };
    };
    return function(url) {
      var CachedResource, Resource, method, _i, _len, _ref;
      Resource = $resource.apply(null, arguments);
      CachedResource = {};
      _ref = ['get', 'query'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        method = _ref[_i];
        if (Resource[method] != null) {
          CachedResource[method] = simpleCache(Resource, method, url);
        }
      }
      return CachedResource;
    };
  }
]);

app;
