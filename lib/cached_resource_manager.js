// Generated by CoffeeScript 1.7.1
var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

module.exports = function(debug) {
  var CachedResourceManager, ResourceWriteQueue, cache;
  ResourceWriteQueue = require('./resource_write_queue')(debug);
  cache = require('./cache')(debug);
  return CachedResourceManager = (function() {
    function CachedResourceManager($timeout) {
      this.$timeout = $timeout;
      this.byKey = {};
    }

    CachedResourceManager.prototype.keys = function() {
      return Object.keys(this.byKey);
    };

    CachedResourceManager.prototype.add = function(CachedResource) {
      var queue;
      queue = new ResourceWriteQueue(CachedResource, this.$timeout);
      return this.byKey[CachedResource.$key] = {
        resource: CachedResource,
        queue: queue
      };
    };

    CachedResourceManager.prototype.getQueue = function(CachedResource) {
      return this.byKey[CachedResource.$key].queue;
    };

    CachedResourceManager.prototype.flushQueues = function() {
      var key, queue, _ref, _results;
      _ref = this.byKey;
      _results = [];
      for (key in _ref) {
        queue = _ref[key].queue;
        _results.push(queue.flush());
      }
      return _results;
    };

    CachedResourceManager.prototype.clearAll = function(_arg) {
      var clearPendingWrites, exceptFor, key, resource, _ref, _ref1, _results;
      _ref = _arg != null ? _arg : {}, exceptFor = _ref.exceptFor, clearPendingWrites = _ref.clearPendingWrites;
      if (exceptFor == null) {
        exceptFor = [];
      }
      _ref1 = this.byKey;
      _results = [];
      for (key in _ref1) {
        resource = _ref1[key].resource;
        if (__indexOf.call(exceptFor, key) < 0) {
          _results.push(resource.$clearAll({
            clearPendingWrites: clearPendingWrites
          }));
        }
      }
      return _results;
    };

    CachedResourceManager.prototype.clearUndefined = function() {
      return cache.clear({
        exceptFor: this.keys()
      });
    };

    return CachedResourceManager;

  })();
};
